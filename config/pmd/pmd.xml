<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="Base ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>
        General Java quality rules.
    </description>

    <!-- Best practices (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_bestpractices.html) -->
    <rule ref="category/java/bestpractices.xml">
        <exclude name="JUnitAssertionsShouldIncludeMessage"/>
        <exclude name="JUnit4SuitesShouldUseSuiteAnnotation"/>
        <exclude name="JUnitTestsShouldIncludeAssert"/>
        <exclude name="JUnit4TestShouldUseBeforeAnnotation"/>
        <exclude name="JUnit4TestShouldUseAfterAnnotation"/>
        <exclude name="JUnit4TestShouldUseTestAnnotation"/>
        <exclude name="JUnitTestContainsTooManyAsserts"/>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>

    <!-- Code style (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_codestyle.html) -->
    <rule ref="category/java/codestyle.xml">
        <exclude name="AvoidFinalLocalVariable"/>
        <exclude name="CommentDefaultAccessModifier"/>
        <exclude name="AtLeastOneConstructor"/>
        <exclude name="LocalVariableCouldBeFinal"/>
        <exclude name="MethodArgumentCouldBeFinal"/>
        <exclude name="LongVariable"/>
        <exclude name="OnlyOneReturn"/> <!-- disabled in favour of checkstyle ReturnCount check -->
        <exclude name="ShortClassName"/>
        <exclude name="ShortMethodName"/>
        <exclude name="ShortVariable"/>
    </rule>
    <rule ref="category/java/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="enumConstantPattern" value="[A-Z][a-zA-Z_0-9]*"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/LinguisticNaming">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/TooManyStaticImports">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>

    <!-- Design (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_design.html) -->
    <rule ref="category/java/design.xml">
        <exclude name="AvoidCatchingGenericException"/>
        <exclude name="LawOfDemeter"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="SignatureDeclareThrowsException"/>
    </rule>
    <rule ref="category/java/design.xml/UseUtilityClass">
        <properties>
            <property name="ignoredAnnotations"
                      value="lombok.experimental.UtilityClass|org.springframework.boot.autoconfigure.SpringBootApplication"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveImports">
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration['.*Test']"/>
        </properties>
    </rule>

    <!-- Documentation (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_documentation.html) -->
    <rule ref="category/java/documentation.xml">
        <exclude name="CommentRequired"/>
    </rule>

    <!-- Error prone (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_errorprone.html) -->
    <rule ref="category/java/errorprone.xml">
        <exclude name="BeanMembersShouldSerialize"/>
        <exclude name="MissingSerialVersionUID"/>
        <exclude name="NullAssignment"/> <!-- disabled due to false positive for initialization with ternary operator -->
    </rule>

    <!-- Error prone (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_multithreading.html) -->
    <rule ref="category/java/multithreading.xml"/>

    <!-- Performance (https://pmd.github.io/pmd-6.0.1/pmd_rules_java_performance.html) -->
    <rule ref="category/java/performance.xml"/>

    <!-- Security (no rules) -->
    <rule ref="category/java/security.xml"/>

</ruleset>
